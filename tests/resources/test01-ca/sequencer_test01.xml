<?xml version="1.0" encoding="UTF-8"?>
<Procedure xmlns="http://codac.iter.org/sup/sequencer" version="1.0"
           name="Sequencer functional test"
           xmlns:xs="http://www.w3.org/2001/XMLSchema-instance"
           xs:schemaLocation="http://codac.iter.org/sup/sequencer sequencer.xsd">
  <Plugin>libsequencerpluginepics.so</Plugin>
  <Repeat isRoot="True" maxCount="-1">
    <Sequence>
      <Wait timeout="0.2"/>
      <Include name="Check if test is running" path="TestInRunningState"/>
      <ForceSuccess>
        <Include name="Evaluate device status" path="ProcessDeviceStatus"/>
      </ForceSuccess>
      <Output from="devices_ready" description="devices_ready" />
    </Sequence>
  </Repeat>
  <Sequence name="TestInRunningState">
    <!-- <Output from="test_is_active" description="test_is_active:" /> -->
    <Equals lhs="test_is_active" rhs="one"/>
  </Sequence>
  <Sequence name="ProcessDeviceStatus">
    <Inverter>
      <Include name="Conditionally set ready status" path="ConditionallySetSystemInReadyState"/>
    </Inverter>
    <Copy name="Set status to Not Ready" input="zero" output="devices_ready"/>
  </Sequence>  
  <Sequence name="ConditionallySetSystemInReadyState">
      <Sequence name="AllReady">
        <Equals lhs="dev1_status" rhs="one"/>
        <Equals lhs="dev2_status" rhs="one"/>
      </Sequence>
      <Copy name="Set status Ready" input="one" output="devices_ready"/>
      <!-- <Output from="devices_ready" description="devices_ready" /> -->
  </Sequence>
  <Workspace>
    <Local name="zero" type='{"type":"uint32"}' value="0"/>
    <Local name="one" type='{"type":"uint32"}' value="1"/>
    <ChannelAccessVariable name="test_is_active" channel="FTEST01:RUNNING" datatype='{"type":"uint32"}'/>
    <ChannelAccessVariable name="dev1_status" channel="FTEST01:DEV1-STATUS" datatype='{"type":"uint32"}'/>
    <ChannelAccessVariable name="dev2_status" channel="FTEST01:DEV2-STATUS" datatype='{"type":"uint32"}'/>
    <ChannelAccessVariable name="devices_ready" channel="FTEST01:DEVICES-READY" datatype='{"type":"uint32"}'/>
  </Workspace>  
</Procedure>
